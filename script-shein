-- ========================================
-- 1. criar banco de dados
-- ========================================
create database shein_ficticio;

-- ========================================
-- 2. tabelas
-- ========================================

-- categorias
create table categorias (
    id_categoria serial primary key,
    nome varchar(100) not null
);

-- clientes
create table clientes (
    id_cliente serial primary key,
    nome varchar(100),
    email varchar(150) unique,
    senha varchar(100),
    pais varchar(100),
    data_cadastro date default current_date
);

-- funcionarios
create table funcionarios (
    id_funcionario serial primary key,
    nome varchar(100),
    email varchar(150) unique,
    cargo varchar(100),
    salario numeric(10, 2)
);

-- admins
create table admins (
    id_admin serial primary key,
    nome varchar(100),
    email varchar(150) unique,
    senha varchar(100)
);

-- produtos
create table produtos (
    id_produto serial primary key,
    nome varchar(150),
    preco numeric(10, 2),
    id_categoria integer references categorias(id_categoria),
    estoque integer,
    descricao text
);

-- pedidos
create table pedidos (
    id_pedido serial primary key,
    id_cliente integer references clientes(id_cliente),
    data_pedido timestamp default current_timestamp,
    status varchar(50) default 'pendente'
);

-- itens do pedido
create table itens_pedido (
    id_item serial primary key,
    id_pedido integer references pedidos(id_pedido),
    id_produto integer references produtos(id_produto),
    quantidade integer,
    preco_unitario numeric(10, 2)
);

-- pagamentos
create table pagamentos (
    id_pagamento serial primary key,
    id_pedido integer references pedidos(id_pedido),
    metodo_pagamento varchar(50),
    valor_total numeric(10, 2),
    status_pagamento varchar(50),
    data_pagamento timestamp default current_timestamp
);

-- favoritos
create table favoritos (
    id_favorito serial primary key,
    id_cliente integer references clientes(id_cliente),
    id_produto integer references produtos(id_produto),
    data_adicionado timestamp default current_timestamp,
    unique(id_cliente, id_produto)
);

-- carrinho
create table carrinho (
    id_item_carrinho serial primary key,
    id_cliente integer references clientes(id_cliente),
    id_produto integer references produtos(id_produto),
    quantidade integer not null,
    preco_unitario numeric(10, 2) not null,
    data_adicionado timestamp default current_timestamp,
    unique(id_cliente, id_produto)
);

-- moedas
create table moedas (
    id_moeda serial primary key,
    sigla varchar(10) unique,
    taxa_conversao numeric(10,4)
);

-- ========================================
-- inserts
-- ========================================

-- categorias
insert into categorias (nome) values
('moda feminina'),
('moda masculina'),
('acessórios'),
('calçados'),
('infantil');

-- clientes
insert into clientes (nome, email, senha, pais) values
('miguel teixeira', 'miguel@gmail.com', 'migs123', 'brasil'),
('marlon franco', 'marlon@gmail.com', 'marlon123', 'portugal'),
('cliente ficticio', 'cliente3@email.com', 'senha123', 'brasil');

-- funcionarios
insert into funcionarios (nome, email, cargo, salario) values
('carlos alberto', 'carlos@shein.com', 'estoquista', 2800.00),
('fernanda dias', 'fernanda@shein.com', 'atendente', 2600.00),
('rafael gomes', 'rafael@shein.com', 'supervisor', 4200.00);

-- admins
insert into admins (nome, email, senha) values
('admin1', 'admin1@shein.com', 'admin123'),
('admin2', 'admin2@shein.com', 'admin456');

-- produtos
insert into produtos (nome, preco, id_categoria, estoque, descricao) values
('blusa feminina rosa', 89.90, 1, 50, 'blusa casual de algodão'),
('calça jeans masculina', 129.90, 2, 30, 'calça jeans azul escura'),
('brinco de argola dourado', 19.90, 3, 100, 'brinco de bijuteria'),
('tênis branco feminino', 179.90, 4, 20, 'tênis casual branco com sola alta'),
('camiseta infantil', 49.90, 5, 40, 'camiseta divertida para crianças');

-- pedidos
insert into pedidos (id_cliente, data_pedido, status) values
(1, '2025-07-01 10:30:00', 'pago'),
(2, '2025-07-02 14:45:00', 'pago'),
(3, '2025-07-03 16:00:00', 'pendente');

-- itens do pedido
insert into itens_pedido (id_pedido, id_produto, quantidade, preco_unitario) values
(1, 1, 2, 89.90),
(1, 3, 1, 19.90),
(2, 2, 1, 129.90),
(3, 5, 3, 49.90);

-- pagamentos
insert into pagamentos (id_pedido, metodo_pagamento, valor_total, status_pagamento) values
(1, 'cartão de crédito', 199.70, 'pago'),
(2, 'pix', 129.90, 'pago'),
(3, 'boleto', 149.70, 'pendente');

-- favoritos
insert into favoritos (id_cliente, id_produto) values
(1, 2),
(1, 3),
(2, 4);

-- carrinho
insert into carrinho (id_cliente, id_produto, quantidade, preco_unitario) values
(1, 1, 1, 89.90),
(1, 4, 2, 179.90),
(2, 5, 3, 49.90);

-- moedas
insert into moedas (sigla, taxa_conversao) values
('brl', 1.0000),
('usd', 0.1900),
('eur', 0.1700);

-- ========================================
-- views
-- ========================================
create or replace view produtos_convertidos as
select 
    p.id_produto,
    p.nome,
    m.sigla,
    round(p.preco * m.taxa_conversao, 2) as preco_convertido
from produtos p
cross join moedas m;

-- ========================================
-- consultas
-- ========================================

-- nome e email dos clientes
select nome, email from clientes where nome = 'miguel teixeira';

-- país de cada cliente
select nome, pais from clientes;

-- data de cadastro dos clientes
select nome, data_cadastro from clientes;

-- pedidos com cliente, data e status
select p.id_pedido, c.nome as cliente, p.data_pedido, p.status
from pedidos p
join clientes c on p.id_cliente = c.id_cliente;

-- valor das compras e país
select p.id_pedido, c.nome, c.pais as destino, pg.valor_total
from pedidos p
join clientes c on p.id_cliente = c.id_cliente
join pagamentos pg on pg.id_pedido = p.id_pedido;

-- métodos de pagamento
select distinct metodo_pagamento from pagamentos;

-- produtos comprados por cliente
select c.nome as cliente, pr.nome as produto, ip.quantidade
from itens_pedido ip
join pedidos p on ip.id_pedido = p.id_pedido
join clientes c on p.id_cliente = c.id_cliente
join produtos pr on ip.id_produto = pr.id_produto
order by cliente;

-- últimos pedidos
select c.nome as cliente, p.id_pedido, p.data_pedido, p.status
from pedidos p
join clientes c on p.id_cliente = c.id_cliente
order by p.data_pedido desc;

-- funcionário com maior salário
select nome, cargo, salario
from funcionarios
order by salario desc
limit 1;

-- total de clientes por país
select pais, count(*) as total_clientes
from clientes
group by pais;

-- total de produtos por categoria
select c.nome as categoria, count(*) as total_produtos
from produtos p
join categorias c on p.id_categoria = c.id_categoria
group by c.nome;

-- listar categorias
select id_categoria, nome from categorias order by nome;

-- produtos favoritos de um cliente
select f.id_favorito, c.nome as cliente, p.nome as produto, f.data_adicionado
from favoritos f
join clientes c on f.id_cliente = c.id_cliente
join produtos p on f.id_produto = p.id_produto
where c.email = 'miguel@gmail.com'
order by f.data_adicionado desc;

-- itens no carrinho do cliente
select c.nome as cliente, p.nome as produto, cr.quantidade, cr.preco_unitario,
       (cr.quantidade * cr.preco_unitario) as total_item, cr.data_adicionado
from carrinho cr
join clientes c on cr.id_cliente = c.id_cliente
join produtos p on cr.id_produto = p.id_produto
where c.email = 'miguel@gmail.com'
order by cr.data_adicionado desc;

-- produtos em dólar
select * from produtos_convertidos where sigla = 'usd';

-- produtos em euro
select * from produtos_convertidos where sigla = 'eur';


-------------------------------------------
-- SISTEMA DE CUPOM 
-------------------------------------------
-- tabela de cupons
create table cupons (
    id_cupom serial primary key,
    codigo varchar(50) unique not null,         -- código do cupom em letras minúsculas
    tipo_desconto varchar(10) not null check (tipo_desconto in ('percentual', 'fixo')),  -- tipo do desconto
    valor_desconto numeric(10, 2) not null,    -- valor do desconto (ex: 10 para 10% ou R$10,00)
    data_validade date not null,
    ativo boolean default true
);

-- tabela para registrar uso do cupom por cliente
create table cupons_usados (
    id_cupom_usado serial primary key,
    id_cupom integer references cupons(id_cupom),
    id_cliente integer references clientes(id_cliente),
    data_uso timestamp default current_timestamp,
    unique(id_cupom, id_cliente)
);

-- inserts exemplo de cupons
insert into cupons (codigo, tipo_desconto, valor_desconto, data_validade) values
('desconto10', 'percentual', 10, '2025-12-31'),
('fixo20', 'fixo', 20, '2025-10-31');

-- consulta para cupons ativos
select codigo, tipo_desconto, valor_desconto, data_validade
from cupons
where ativo = true and data_validade >= current_date
order by data_validade;
